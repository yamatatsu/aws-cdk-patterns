// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot test 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters5b385fa3c561a46cab5a75fb5516f08be77c83c92604538d09437216e61c7899ArtifactHash3A4B6B2F": Object {
      "Description": "Artifact hash for asset \\"5b385fa3c561a46cab5a75fb5516f08be77c83c92604538d09437216e61c7899\\"",
      "Type": "String",
    },
    "AssetParameters5b385fa3c561a46cab5a75fb5516f08be77c83c92604538d09437216e61c7899S3Bucket19DD2848": Object {
      "Description": "S3 bucket for asset \\"5b385fa3c561a46cab5a75fb5516f08be77c83c92604538d09437216e61c7899\\"",
      "Type": "String",
    },
    "AssetParameters5b385fa3c561a46cab5a75fb5516f08be77c83c92604538d09437216e61c7899S3VersionKey83E6A27D": Object {
      "Description": "S3 key for asset version \\"5b385fa3c561a46cab5a75fb5516f08be77c83c92604538d09437216e61c7899\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "HttpApiDefaultStage3EEB07D6": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "HttpApiF5A9A8A7",
        },
        "AutoDeploy": true,
        "StageName": "$default",
      },
      "Type": "AWS::ApiGatewayV2::Stage",
    },
    "HttpApiF5A9A8A7": Object {
      "Properties": Object {
        "CorsConfiguration": Object {},
        "Name": "WebAuthnDemoApi",
        "ProtocolType": "HTTP",
      },
      "Type": "AWS::ApiGatewayV2::Api",
    },
    "HttpApiGETauthchallenge573B056E": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "HttpApiF5A9A8A7",
        },
        "RouteKey": "GET /auth/challenge",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "HttpApiGETauthchallengeGETauthchallengeIntegrationBDA6710B",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "HttpApiGETauthchallengeGETauthchallengeIntegrationBDA6710B": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "HttpApiF5A9A8A7",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::GetAtt": Array [
            "getChallengeHandler8D5C0935",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "HttpApiGETauthchallengeTargetHttpApiGETauthchallenge682056F5PermissionA2BFF7DC": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "getChallengeHandler8D5C0935",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "HttpApiF5A9A8A7",
              },
              "/*/*/auth/challenge",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "getChallengeHandler8D5C0935": Object {
      "DependsOn": Array [
        "getChallengeHandlerServiceRoleDefaultPolicy0BAD431D",
        "getChallengeHandlerServiceRole0F75F0BF",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters5b385fa3c561a46cab5a75fb5516f08be77c83c92604538d09437216e61c7899S3Bucket19DD2848",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters5b385fa3c561a46cab5a75fb5516f08be77c83c92604538d09437216e61c7899S3VersionKey83E6A27D",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters5b385fa3c561a46cab5a75fb5516f08be77c83c92604538d09437216e61c7899S3VersionKey83E6A27D",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "FunctionName": "WebAuthnDemo_getChallengeHandler",
        "Handler": "index.getChallenge",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "getChallengeHandlerServiceRole0F75F0BF",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 3,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "getChallengeHandlerServiceRole0F75F0BF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "getChallengeHandlerServiceRoleDefaultPolicy0BAD431D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "getChallengeHandlerServiceRoleDefaultPolicy0BAD431D",
        "Roles": Array [
          Object {
            "Ref": "getChallengeHandlerServiceRole0F75F0BF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;
